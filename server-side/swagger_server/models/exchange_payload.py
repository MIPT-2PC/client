# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ExchangePayload(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, start_index: int=None, out_dec_number: int=None, end_index: int=None):  # noqa: E501
        """ExchangePayload - a model defined in Swagger

        :param start_index: The start_index of this ExchangePayload.  # noqa: E501
        :type start_index: int
        :param out_dec_number: The out_dec_number of this ExchangePayload.  # noqa: E501
        :type out_dec_number: int
        :param end_index: The end_index of this ExchangePayload.  # noqa: E501
        :type end_index: int
        """
        self.swagger_types = {
            'start_index': int,
            'out_dec_number': int,
            'end_index': int
        }

        self.attribute_map = {
            'start_index': 'startIndex',
            'out_dec_number': 'outDecNumber',
            'end_index': 'endIndex'
        }
        self._start_index = start_index
        self._out_dec_number = out_dec_number
        self._end_index = end_index

    @classmethod
    def from_dict(cls, dikt) -> 'ExchangePayload':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ExchangePayload of this ExchangePayload.  # noqa: E501
        :rtype: ExchangePayload
        """
        return util.deserialize_model(dikt, cls)

    @property
    def start_index(self) -> int:
        """Gets the start_index of this ExchangePayload.


        :return: The start_index of this ExchangePayload.
        :rtype: int
        """
        return self._start_index

    @start_index.setter
    def start_index(self, start_index: int):
        """Sets the start_index of this ExchangePayload.


        :param start_index: The start_index of this ExchangePayload.
        :type start_index: int
        """

        self._start_index = start_index

    @property
    def out_dec_number(self) -> int:
        """Gets the out_dec_number of this ExchangePayload.


        :return: The out_dec_number of this ExchangePayload.
        :rtype: int
        """
        return self._out_dec_number

    @out_dec_number.setter
    def out_dec_number(self, out_dec_number: int):
        """Sets the out_dec_number of this ExchangePayload.


        :param out_dec_number: The out_dec_number of this ExchangePayload.
        :type out_dec_number: int
        """

        self._out_dec_number = out_dec_number

    @property
    def end_index(self) -> int:
        """Gets the end_index of this ExchangePayload.


        :return: The end_index of this ExchangePayload.
        :rtype: int
        """
        return self._end_index

    @end_index.setter
    def end_index(self, end_index: int):
        """Sets the end_index of this ExchangePayload.


        :param end_index: The end_index of this ExchangePayload.
        :type end_index: int
        """

        self._end_index = end_index
